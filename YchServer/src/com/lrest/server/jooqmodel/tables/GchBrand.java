/**
 * This class is generated by jOOQ
 */
package com.lrest.server.jooqmodel.tables;


import com.lrest.server.jooqmodel.Gouchehui2_0;
import com.lrest.server.jooqmodel.Keys;
import com.lrest.server.jooqmodel.tables.records.GchBrandRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 品牌表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GchBrand extends TableImpl<GchBrandRecord> {

    private static final long serialVersionUID = 809348987;

    /**
     * The reference instance of <code>gouchehui2.0.gch_brand</code>
     */
    public static final GchBrand GCH_BRAND = new GchBrand();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GchBrandRecord> getRecordType() {
        return GchBrandRecord.class;
    }

    /**
     * The column <code>gouchehui2.0.gch_brand.id</code>. 主键
     */
    public final TableField<GchBrandRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "主键");

    /**
     * The column <code>gouchehui2.0.gch_brand.brand_name</code>. 名称
     */
    public final TableField<GchBrandRecord, String> BRAND_NAME = createField("brand_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "名称");

    /**
     * The column <code>gouchehui2.0.gch_brand.logo</code>. logo
     */
    public final TableField<GchBrandRecord, String> LOGO = createField("logo", org.jooq.impl.SQLDataType.VARCHAR.length(240), this, "logo");

    /**
     * The column <code>gouchehui2.0.gch_brand.access_quantity</code>. 访问量
     */
    public final TableField<GchBrandRecord, Integer> ACCESS_QUANTITY = createField("access_quantity", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "访问量");

    /**
     * The column <code>gouchehui2.0.gch_brand.createtime</code>. 创建时间
     */
    public final TableField<GchBrandRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>gouchehui2.0.gch_brand.createuser</code>. 创建人
     */
    public final TableField<GchBrandRecord, String> CREATEUSER = createField("createuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "创建人");

    /**
     * The column <code>gouchehui2.0.gch_brand.isdelete</code>. 是否删除
     */
    public final TableField<GchBrandRecord, Integer> ISDELETE = createField("isdelete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否删除");

    /**
     * The column <code>gouchehui2.0.gch_brand.updatetime</code>. 修改时间
     */
    public final TableField<GchBrandRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>gouchehui2.0.gch_brand.updateuser</code>. 修改人
     */
    public final TableField<GchBrandRecord, String> UPDATEUSER = createField("updateuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "修改人");

    /**
     * The column <code>gouchehui2.0.gch_brand.alif</code>.
     */
    public final TableField<GchBrandRecord, String> ALIF = createField("alif", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

    /**
     * The column <code>gouchehui2.0.gch_brand.fid</code>. 大品牌ID
     */
    public final TableField<GchBrandRecord, String> FID = createField("fid", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "大品牌ID");

    /**
     * Create a <code>gouchehui2.0.gch_brand</code> table reference
     */
    public GchBrand() {
        this("gch_brand", null);
    }

    /**
     * Create an aliased <code>gouchehui2.0.gch_brand</code> table reference
     */
    public GchBrand(String alias) {
        this(alias, GCH_BRAND);
    }

    private GchBrand(String alias, Table<GchBrandRecord> aliased) {
        this(alias, aliased, null);
    }

    private GchBrand(String alias, Table<GchBrandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "品牌表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gouchehui2_0.GOUCHEHUI2_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GchBrandRecord> getPrimaryKey() {
        return Keys.KEY_GCH_BRAND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GchBrandRecord>> getKeys() {
        return Arrays.<UniqueKey<GchBrandRecord>>asList(Keys.KEY_GCH_BRAND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GchBrand as(String alias) {
        return new GchBrand(alias, this);
    }

    /**
     * Rename this table
     */
    public GchBrand rename(String name) {
        return new GchBrand(name, null);
    }
}
