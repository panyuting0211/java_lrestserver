/**
 * This class is generated by jOOQ
 */
package com.lrest.server.jooqmodel.tables;


import com.lrest.server.jooqmodel.Gouchehui2_0;
import com.lrest.server.jooqmodel.Keys;
import com.lrest.server.jooqmodel.tables.records.GchUser_4sRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GchUser_4s extends TableImpl<GchUser_4sRecord> {

    private static final long serialVersionUID = -726303336;

    /**
     * The reference instance of <code>gouchehui2.0.gch_user_4s</code>
     */
    public static final GchUser_4s GCH_USER_4S = new GchUser_4s();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GchUser_4sRecord> getRecordType() {
        return GchUser_4sRecord.class;
    }

    /**
     * The column <code>gouchehui2.0.gch_user_4s.id</code>. 主键
     */
    public final TableField<GchUser_4sRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "主键");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.user_name</code>. 登录名
     */
    public final TableField<GchUser_4sRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "登录名");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.password</code>. 登陆密码(MD5)
     */
    public final TableField<GchUser_4sRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "登陆密码(MD5)");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.role</code>. 身份1、普通用户 2、4S店会员(关联到4S店自定管理4S店主键) 3、经销商
     */
    public final TableField<GchUser_4sRecord, Integer> ROLE = createField("role", org.jooq.impl.SQLDataType.INTEGER, this, "身份1、普通用户 2、4S店会员(关联到4S店自定管理4S店主键) 3、经销商");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.tel</code>. 电话
     */
    public final TableField<GchUser_4sRecord, String> TEL = createField("tel", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "电话");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.email</code>. 邮箱
     */
    public final TableField<GchUser_4sRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "邮箱");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.status</code>. 用户状态
     */
    public final TableField<GchUser_4sRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "用户状态");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.head_url</code>. 头像
     */
    public final TableField<GchUser_4sRecord, String> HEAD_URL = createField("head_url", org.jooq.impl.SQLDataType.VARCHAR.length(240), this, "头像");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.nick</code>. 昵称
     */
    public final TableField<GchUser_4sRecord, String> NICK = createField("nick", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "昵称");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.name_4s</code>. 4S店名称
     */
    public final TableField<GchUser_4sRecord, String> NAME_4S = createField("name_4s", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "4S店名称");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.brand_4s</code>. 4S店主营品牌
     */
    public final TableField<GchUser_4sRecord, String> BRAND_4S = createField("brand_4s", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "4S店主营品牌");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.contacts</code>. 联系人
     */
    public final TableField<GchUser_4sRecord, String> CONTACTS = createField("contacts", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "联系人");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.addr</code>. 地址
     */
    public final TableField<GchUser_4sRecord, String> ADDR = createField("addr", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "地址");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.city_id</code>. 城市ID
     */
    public final TableField<GchUser_4sRecord, String> CITY_ID = createField("city_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "城市ID");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.my_num</code>. 我的邀请码
     */
    public final TableField<GchUser_4sRecord, String> MY_NUM = createField("my_num", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "我的邀请码");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.binding_num</code>. 绑定邀请码
     */
    public final TableField<GchUser_4sRecord, String> BINDING_NUM = createField("binding_num", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "绑定邀请码");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.total_jifen</code>. 用户积分
     */
    public final TableField<GchUser_4sRecord, Integer> TOTAL_JIFEN = createField("total_jifen", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户积分");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.jifen_sign</code>.
     */
    public final TableField<GchUser_4sRecord, String> JIFEN_SIGN = createField("jifen_sign", org.jooq.impl.SQLDataType.VARCHAR.length(2).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.exchange_usedtimes</code>. 当月积分已使用次数
     */
    public final TableField<GchUser_4sRecord, Integer> EXCHANGE_USEDTIMES = createField("exchange_usedtimes", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当月积分已使用次数");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.exchange_alltimes</code>. 当月积分总兑换次数
     */
    public final TableField<GchUser_4sRecord, Integer> EXCHANGE_ALLTIMES = createField("exchange_alltimes", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当月积分总兑换次数");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.wx_open_id</code>. 微信开放用户ID
     */
    public final TableField<GchUser_4sRecord, String> WX_OPEN_ID = createField("wx_open_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "微信开放用户ID");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.qq_open_id</code>. QQ互联用户open_id
     */
    public final TableField<GchUser_4sRecord, String> QQ_OPEN_ID = createField("qq_open_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "QQ互联用户open_id");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.power</code>. 1：报价权限，2：4s店名称地址权限，4：库存权限；权限值可叠加。
     */
    public final TableField<GchUser_4sRecord, Integer> POWER = createField("power", org.jooq.impl.SQLDataType.INTEGER, this, "1：报价权限，2：4s店名称地址权限，4：库存权限；权限值可叠加。");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.month_car_num</code>. 每个月被标为底价的车款数
     */
    public final TableField<GchUser_4sRecord, Integer> MONTH_CAR_NUM = createField("month_car_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "每个月被标为底价的车款数");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.total_car_num</code>.
     */
    public final TableField<GchUser_4sRecord, Integer> TOTAL_CAR_NUM = createField("total_car_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.quarter_car_num</code>. 每个季度被标为底价的车款数
     */
    public final TableField<GchUser_4sRecord, Integer> QUARTER_CAR_NUM = createField("quarter_car_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "每个季度被标为底价的车款数");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.logintime</code>.
     */
    public final TableField<GchUser_4sRecord, String> LOGINTIME = createField("logintime", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.loginip</code>.
     */
    public final TableField<GchUser_4sRecord, String> LOGINIP = createField("loginip", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.createtime</code>. 创建时间
     */
    public final TableField<GchUser_4sRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.createuser</code>.
     */
    public final TableField<GchUser_4sRecord, String> CREATEUSER = createField("createuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.isdelete</code>. 是否删除
     */
    public final TableField<GchUser_4sRecord, Integer> ISDELETE = createField("isdelete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否删除");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.updatetime</code>. 修改时间
     */
    public final TableField<GchUser_4sRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>gouchehui2.0.gch_user_4s.updateuser</code>.
     */
    public final TableField<GchUser_4sRecord, String> UPDATEUSER = createField("updateuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * Create a <code>gouchehui2.0.gch_user_4s</code> table reference
     */
    public GchUser_4s() {
        this("gch_user_4s", null);
    }

    /**
     * Create an aliased <code>gouchehui2.0.gch_user_4s</code> table reference
     */
    public GchUser_4s(String alias) {
        this(alias, GCH_USER_4S);
    }

    private GchUser_4s(String alias, Table<GchUser_4sRecord> aliased) {
        this(alias, aliased, null);
    }

    private GchUser_4s(String alias, Table<GchUser_4sRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gouchehui2_0.GOUCHEHUI2_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GchUser_4sRecord> getPrimaryKey() {
        return Keys.KEY_GCH_USER_4S_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GchUser_4sRecord>> getKeys() {
        return Arrays.<UniqueKey<GchUser_4sRecord>>asList(Keys.KEY_GCH_USER_4S_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GchUser_4s as(String alias) {
        return new GchUser_4s(alias, this);
    }

    /**
     * Rename this table
     */
    public GchUser_4s rename(String name) {
        return new GchUser_4s(name, null);
    }
}
