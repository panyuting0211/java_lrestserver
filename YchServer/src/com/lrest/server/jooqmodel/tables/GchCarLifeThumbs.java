/**
 * This class is generated by jOOQ
 */
package com.lrest.server.jooqmodel.tables;


import com.lrest.server.jooqmodel.Gouchehui2_0;
import com.lrest.server.jooqmodel.Keys;
import com.lrest.server.jooqmodel.tables.records.GchCarLifeThumbsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GchCarLifeThumbs extends TableImpl<GchCarLifeThumbsRecord> {

    private static final long serialVersionUID = -258410264;

    /**
     * The reference instance of <code>gouchehui2.0.gch_car_life_thumbs</code>
     */
    public static final GchCarLifeThumbs GCH_CAR_LIFE_THUMBS = new GchCarLifeThumbs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GchCarLifeThumbsRecord> getRecordType() {
        return GchCarLifeThumbsRecord.class;
    }

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.id</code>. 主键id
     */
    public final TableField<GchCarLifeThumbsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "主键id");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.user_id</code>. 用户id
     */
    public final TableField<GchCarLifeThumbsRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "用户id");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.bbs_id</code>. 帖子id
     */
    public final TableField<GchCarLifeThumbsRecord, String> BBS_ID = createField("bbs_id", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "帖子id");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.comment_id</code>. 评论id
     */
    public final TableField<GchCarLifeThumbsRecord, Integer> COMMENT_ID = createField("comment_id", org.jooq.impl.SQLDataType.INTEGER, this, "评论id");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.createtime</code>. 创建时间
     */
    public final TableField<GchCarLifeThumbsRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.createuser</code>. 创建人
     */
    public final TableField<GchCarLifeThumbsRecord, String> CREATEUSER = createField("createuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "创建人");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.isdelete</code>. 是否删除
     */
    public final TableField<GchCarLifeThumbsRecord, Integer> ISDELETE = createField("isdelete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否删除");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.updatetime</code>. 修改时间
     */
    public final TableField<GchCarLifeThumbsRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>gouchehui2.0.gch_car_life_thumbs.updateuser</code>. 修改人
     */
    public final TableField<GchCarLifeThumbsRecord, String> UPDATEUSER = createField("updateuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "修改人");

    /**
     * Create a <code>gouchehui2.0.gch_car_life_thumbs</code> table reference
     */
    public GchCarLifeThumbs() {
        this("gch_car_life_thumbs", null);
    }

    /**
     * Create an aliased <code>gouchehui2.0.gch_car_life_thumbs</code> table reference
     */
    public GchCarLifeThumbs(String alias) {
        this(alias, GCH_CAR_LIFE_THUMBS);
    }

    private GchCarLifeThumbs(String alias, Table<GchCarLifeThumbsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GchCarLifeThumbs(String alias, Table<GchCarLifeThumbsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gouchehui2_0.GOUCHEHUI2_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GchCarLifeThumbsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GCH_CAR_LIFE_THUMBS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GchCarLifeThumbsRecord> getPrimaryKey() {
        return Keys.KEY_GCH_CAR_LIFE_THUMBS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GchCarLifeThumbsRecord>> getKeys() {
        return Arrays.<UniqueKey<GchCarLifeThumbsRecord>>asList(Keys.KEY_GCH_CAR_LIFE_THUMBS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GchCarLifeThumbs as(String alias) {
        return new GchCarLifeThumbs(alias, this);
    }

    /**
     * Rename this table
     */
    public GchCarLifeThumbs rename(String name) {
        return new GchCarLifeThumbs(name, null);
    }
}
