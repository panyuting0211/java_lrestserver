/**
 * This class is generated by jOOQ
 */
package com.lrest.server.jooqmodel.tables;


import com.lrest.server.jooqmodel.Gouchehui2_0;
import com.lrest.server.jooqmodel.Keys;
import com.lrest.server.jooqmodel.tables.records.GchAreaRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 4S所在区域
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GchArea extends TableImpl<GchAreaRecord> {

    private static final long serialVersionUID = -1109302566;

    /**
     * The reference instance of <code>gouchehui2.0.gch_area</code>
     */
    public static final GchArea GCH_AREA = new GchArea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GchAreaRecord> getRecordType() {
        return GchAreaRecord.class;
    }

    /**
     * The column <code>gouchehui2.0.gch_area.id</code>. 主键
     */
    public final TableField<GchAreaRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "主键");

    /**
     * The column <code>gouchehui2.0.gch_area.area_name</code>. 区域名称
     */
    public final TableField<GchAreaRecord, String> AREA_NAME = createField("area_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "区域名称");

    /**
     * The column <code>gouchehui2.0.gch_area.createtime</code>. 创建时间
     */
    public final TableField<GchAreaRecord, Timestamp> CREATETIME = createField("createtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>gouchehui2.0.gch_area.createuser</code>. 创建人
     */
    public final TableField<GchAreaRecord, String> CREATEUSER = createField("createuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "创建人");

    /**
     * The column <code>gouchehui2.0.gch_area.isdelete</code>. 是否删除
     */
    public final TableField<GchAreaRecord, Integer> ISDELETE = createField("isdelete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否删除");

    /**
     * The column <code>gouchehui2.0.gch_area.updatetime</code>. 修改时间
     */
    public final TableField<GchAreaRecord, Timestamp> UPDATETIME = createField("updatetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>gouchehui2.0.gch_area.updateuser</code>. 修改人
     */
    public final TableField<GchAreaRecord, String> UPDATEUSER = createField("updateuser", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "修改人");

    /**
     * Create a <code>gouchehui2.0.gch_area</code> table reference
     */
    public GchArea() {
        this("gch_area", null);
    }

    /**
     * Create an aliased <code>gouchehui2.0.gch_area</code> table reference
     */
    public GchArea(String alias) {
        this(alias, GCH_AREA);
    }

    private GchArea(String alias, Table<GchAreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private GchArea(String alias, Table<GchAreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "4S所在区域");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gouchehui2_0.GOUCHEHUI2_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GchAreaRecord> getPrimaryKey() {
        return Keys.KEY_GCH_AREA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GchAreaRecord>> getKeys() {
        return Arrays.<UniqueKey<GchAreaRecord>>asList(Keys.KEY_GCH_AREA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GchArea as(String alias) {
        return new GchArea(alias, this);
    }

    /**
     * Rename this table
     */
    public GchArea rename(String name) {
        return new GchArea(name, null);
    }
}
